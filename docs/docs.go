// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/itinerary": {
            "post": {
                "description": "Creates a travel itinerary based on the provided JSON data and returns a confirmation message with the path to the generated PDF.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Generate a travel itinerary",
                "parameters": [
                    {
                        "description": "Itinerary Request",
                        "name": "itinerary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ItineraryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Activity": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "models.Flight": {
            "type": "object",
            "properties": {
                "airline": {
                    "type": "string"
                },
                "arrival": {
                    "type": "string"
                },
                "departure": {
                    "type": "string"
                },
                "from": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "to": {
                    "type": "string"
                }
            }
        },
        "models.Hotel": {
            "type": "object",
            "properties": {
                "check_in": {
                    "type": "string"
                },
                "check_out": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "price_per_night": {
                    "type": "integer"
                }
            }
        },
        "models.ItineraryRequest": {
            "type": "object",
            "properties": {
                "activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Activity"
                    }
                },
                "flights": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Flight"
                    }
                },
                "hotels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Hotel"
                    }
                },
                "number_of_installments": {
                    "type": "integer"
                },
                "traveller": {
                    "$ref": "#/definitions/models.Traveller"
                },
                "trip": {
                    "$ref": "#/definitions/models.Trip"
                },
                "visa": {
                    "$ref": "#/definitions/models.Visa"
                }
            }
        },
        "models.Traveller": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "number_of_travellers": {
                    "type": "integer"
                }
            }
        },
        "models.Trip": {
            "type": "object",
            "properties": {
                "arrival_date": {
                    "type": "string"
                },
                "departure_date": {
                    "type": "string"
                },
                "departure_from": {
                    "type": "string"
                },
                "destination": {
                    "type": "string"
                },
                "return_date": {
                    "type": "string"
                }
            }
        },
        "models.Visa": {
            "type": "object",
            "properties": {
                "processing_date": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "validity": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Itinerary API",
	Description:      "An API for generating travel itineraries and returning them as a PDF.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
